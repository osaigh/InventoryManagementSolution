//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryClient.Wpf.InventoryServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductCatalog", Namespace="http://schemas.datacontract.org/2004/07/InventoryServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class ProductCatalog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InventoryClient.Wpf.InventoryServiceRef.ProductCatalogItem[] ProductsCatalogItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InventoryClient.Wpf.InventoryServiceRef.ProductCatalogItem[] ProductsCatalogItems {
            get {
                return this.ProductsCatalogItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsCatalogItemsField, value) != true)) {
                    this.ProductsCatalogItemsField = value;
                    this.RaisePropertyChanged("ProductsCatalogItems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductCatalogItem", Namespace="http://schemas.datacontract.org/2004/07/InventoryServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class ProductCatalogItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InventoryClient.Wpf.InventoryServiceRef.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InventoryClient.Wpf.InventoryServiceRef.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/InventoryServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="InventoryServiceRef.IInventoryService", CallbackContract=typeof(InventoryClient.Wpf.InventoryServiceRef.IInventoryServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IInventoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IInventoryService/GetProductCatalog", ReplyAction="http://Microsoft.ServiceModel.Samples/IInventoryService/GetProductCatalogResponse" +
            "")]
        InventoryClient.Wpf.InventoryServiceRef.ProductCatalog GetProductCatalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IInventoryService/GetProductCatalog", ReplyAction="http://Microsoft.ServiceModel.Samples/IInventoryService/GetProductCatalogResponse" +
            "")]
        System.Threading.Tasks.Task<InventoryClient.Wpf.InventoryServiceRef.ProductCatalog> GetProductCatalogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IInventoryService/SubscribeToProductQuantit" +
            "yChanged", ReplyAction="http://Microsoft.ServiceModel.Samples/IInventoryService/SubscribeToProductQuantit" +
            "yChangedResponse")]
        void SubscribeToProductQuantityChanged();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IInventoryService/SubscribeToProductQuantit" +
            "yChanged", ReplyAction="http://Microsoft.ServiceModel.Samples/IInventoryService/SubscribeToProductQuantit" +
            "yChangedResponse")]
        System.Threading.Tasks.Task SubscribeToProductQuantityChangedAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, Action="http://Microsoft.ServiceModel.Samples/IInventoryService/UnsubscribeToProductQuant" +
            "ityChanged", ReplyAction="http://Microsoft.ServiceModel.Samples/IInventoryService/UnsubscribeToProductQuant" +
            "ityChangedResponse")]
        void UnsubscribeToProductQuantityChanged();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, Action="http://Microsoft.ServiceModel.Samples/IInventoryService/UnsubscribeToProductQuant" +
            "ityChanged", ReplyAction="http://Microsoft.ServiceModel.Samples/IInventoryService/UnsubscribeToProductQuant" +
            "ityChangedResponse")]
        System.Threading.Tasks.Task UnsubscribeToProductQuantityChangedAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventoryServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Microsoft.ServiceModel.Samples/IInventoryService/ProductQuantityChanged")]
        void ProductQuantityChanged(string productId, int quantity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventoryServiceChannel : InventoryClient.Wpf.InventoryServiceRef.IInventoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryServiceClient : System.ServiceModel.DuplexClientBase<InventoryClient.Wpf.InventoryServiceRef.IInventoryService>, InventoryClient.Wpf.InventoryServiceRef.IInventoryService {
        
        public InventoryServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public InventoryServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public InventoryServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public InventoryClient.Wpf.InventoryServiceRef.ProductCatalog GetProductCatalog() {
            return base.Channel.GetProductCatalog();
        }
        
        public System.Threading.Tasks.Task<InventoryClient.Wpf.InventoryServiceRef.ProductCatalog> GetProductCatalogAsync() {
            return base.Channel.GetProductCatalogAsync();
        }
        
        public void SubscribeToProductQuantityChanged() {
            base.Channel.SubscribeToProductQuantityChanged();
        }
        
        public System.Threading.Tasks.Task SubscribeToProductQuantityChangedAsync() {
            return base.Channel.SubscribeToProductQuantityChangedAsync();
        }
        
        public void UnsubscribeToProductQuantityChanged() {
            base.Channel.UnsubscribeToProductQuantityChanged();
        }
        
        public System.Threading.Tasks.Task UnsubscribeToProductQuantityChangedAsync() {
            return base.Channel.UnsubscribeToProductQuantityChangedAsync();
        }
    }
}
